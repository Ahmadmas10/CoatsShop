//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoatsShop.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cities", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Cities : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemCode {
            get {
                return this.ItemCodeField;
            }
            set {
                if ((this.ItemCodeField.Equals(value) != true)) {
                    this.ItemCodeField = value;
                    this.RaisePropertyChanged("ItemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemImg {
            get {
                return this.ItemImgField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemImgField, value) != true)) {
                    this.ItemImgField = value;
                    this.RaisePropertyChanged("ItemImg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QntyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisaNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemCode {
            get {
                return this.ItemCodeField;
            }
            set {
                if ((this.ItemCodeField.Equals(value) != true)) {
                    this.ItemCodeField = value;
                    this.RaisePropertyChanged("ItemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDateField, value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderStatusField, value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Qnty {
            get {
                return this.QntyField;
            }
            set {
                if ((this.QntyField.Equals(value) != true)) {
                    this.QntyField = value;
                    this.RaisePropertyChanged("Qnty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisaNumber {
            get {
                return this.VisaNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VisaNumberField, value) != true)) {
                    this.VisaNumberField = value;
                    this.RaisePropertyChanged("VisaNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UbirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UgenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtelnumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fname {
            get {
                return this.FnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FnameField, value) != true)) {
                    this.FnameField = value;
                    this.RaisePropertyChanged("Fname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lname {
            get {
                return this.LnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LnameField, value) != true)) {
                    this.LnameField = value;
                    this.RaisePropertyChanged("Lname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ubirthday {
            get {
                return this.UbirthdayField;
            }
            set {
                if ((object.ReferenceEquals(this.UbirthdayField, value) != true)) {
                    this.UbirthdayField = value;
                    this.RaisePropertyChanged("Ubirthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ugender {
            get {
                return this.UgenderField;
            }
            set {
                if ((object.ReferenceEquals(this.UgenderField, value) != true)) {
                    this.UgenderField = value;
                    this.RaisePropertyChanged("Ugender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPass {
            get {
                return this.UserPassField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPassField, value) != true)) {
                    this.UserPassField = value;
                    this.RaisePropertyChanged("UserPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Utelnum {
            get {
                return this.UtelnumField;
            }
            set {
                if ((object.ReferenceEquals(this.UtelnumField, value) != true)) {
                    this.UtelnumField = value;
                    this.RaisePropertyChanged("Utelnum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailBox", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class MailBox : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecieverEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderFNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderLNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string msgBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string msgDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool msgReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string msgSubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecieverEmail {
            get {
                return this.RecieverEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.RecieverEmailField, value) != true)) {
                    this.RecieverEmailField = value;
                    this.RaisePropertyChanged("RecieverEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderEmail {
            get {
                return this.SenderEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderEmailField, value) != true)) {
                    this.SenderEmailField = value;
                    this.RaisePropertyChanged("SenderEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderFName {
            get {
                return this.SenderFNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderFNameField, value) != true)) {
                    this.SenderFNameField = value;
                    this.RaisePropertyChanged("SenderFName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderLName {
            get {
                return this.SenderLNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderLNameField, value) != true)) {
                    this.SenderLNameField = value;
                    this.RaisePropertyChanged("SenderLName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string msgBody {
            get {
                return this.msgBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.msgBodyField, value) != true)) {
                    this.msgBodyField = value;
                    this.RaisePropertyChanged("msgBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string msgDate {
            get {
                return this.msgDateField;
            }
            set {
                if ((object.ReferenceEquals(this.msgDateField, value) != true)) {
                    this.msgDateField = value;
                    this.RaisePropertyChanged("msgDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool msgRead {
            get {
                return this.msgReadField;
            }
            set {
                if ((this.msgReadField.Equals(value) != true)) {
                    this.msgReadField = value;
                    this.RaisePropertyChanged("msgRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string msgSubject {
            get {
                return this.msgSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.msgSubjectField, value) != true)) {
                    this.msgSubjectField = value;
                    this.RaisePropertyChanged("msgSubject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllCities", ReplyAction="http://tempuri.org/IService1/SelectAllCitiesResponse")]
        CoatsShop.ServiceReference1.Cities[] SelectAllCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllCities", ReplyAction="http://tempuri.org/IService1/SelectAllCitiesResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Cities[]> SelectAllCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCityByName", ReplyAction="http://tempuri.org/IService1/SelectCityByNameResponse")]
        CoatsShop.ServiceReference1.Cities SelectCityByName(string cityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCityByName", ReplyAction="http://tempuri.org/IService1/SelectCityByNameResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Cities> SelectCityByNameAsync(string cityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCityById", ReplyAction="http://tempuri.org/IService1/SelectCityByIdResponse")]
        CoatsShop.ServiceReference1.Cities SelectCityById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCityById", ReplyAction="http://tempuri.org/IService1/SelectCityByIdResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Cities> SelectCityByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OrderByName", ReplyAction="http://tempuri.org/IService1/OrderByNameResponse")]
        CoatsShop.ServiceReference1.Cities[] OrderByName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OrderByName", ReplyAction="http://tempuri.org/IService1/OrderByNameResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Cities[]> OrderByNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllItemList", ReplyAction="http://tempuri.org/IService1/SelectAllItemListResponse")]
        CoatsShop.ServiceReference1.Item[] SelectAllItemList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllItemList", ReplyAction="http://tempuri.org/IService1/SelectAllItemListResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Item[]> SelectAllItemListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectItemListByCategory", ReplyAction="http://tempuri.org/IService1/SelectItemListByCategoryResponse")]
        CoatsShop.ServiceReference1.Item[] SelectItemListByCategory(string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectItemListByCategory", ReplyAction="http://tempuri.org/IService1/SelectItemListByCategoryResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Item[]> SelectItemListByCategoryAsync(string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectItemByName", ReplyAction="http://tempuri.org/IService1/SelectItemByNameResponse")]
        CoatsShop.ServiceReference1.Item SelectItemByName(string ItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectItemByName", ReplyAction="http://tempuri.org/IService1/SelectItemByNameResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Item> SelectItemByNameAsync(string ItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectItemListByPrice", ReplyAction="http://tempuri.org/IService1/SelectItemListByPriceResponse")]
        CoatsShop.ServiceReference1.Item[] SelectItemListByPrice(double Price1, double Price2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectItemListByPrice", ReplyAction="http://tempuri.org/IService1/SelectItemListByPriceResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Item[]> SelectItemListByPriceAsync(double Price1, double Price2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddItem", ReplyAction="http://tempuri.org/IService1/AddItemResponse")]
        int AddItem(CoatsShop.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddItem", ReplyAction="http://tempuri.org/IService1/AddItemResponse")]
        System.Threading.Tasks.Task<int> AddItemAsync(CoatsShop.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItem", ReplyAction="http://tempuri.org/IService1/UpdateItemResponse")]
        int UpdateItem(CoatsShop.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItem", ReplyAction="http://tempuri.org/IService1/UpdateItemResponse")]
        System.Threading.Tasks.Task<int> UpdateItemAsync(CoatsShop.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteItem", ReplyAction="http://tempuri.org/IService1/DeleteItemResponse")]
        int DeleteItem(CoatsShop.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteItem", ReplyAction="http://tempuri.org/IService1/DeleteItemResponse")]
        System.Threading.Tasks.Task<int> DeleteItemAsync(CoatsShop.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllOrders", ReplyAction="http://tempuri.org/IService1/SelectAllOrdersResponse")]
        CoatsShop.ServiceReference1.Order[] SelectAllOrders(string uEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllOrders", ReplyAction="http://tempuri.org/IService1/SelectAllOrdersResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Order[]> SelectAllOrdersAsync(string uEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrder", ReplyAction="http://tempuri.org/IService1/AddOrderResponse")]
        int AddOrder(CoatsShop.ServiceReference1.Order od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrder", ReplyAction="http://tempuri.org/IService1/AddOrderResponse")]
        System.Threading.Tasks.Task<int> AddOrderAsync(CoatsShop.ServiceReference1.Order od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectOrdersByOrderDate", ReplyAction="http://tempuri.org/IService1/SelectOrdersByOrderDateResponse")]
        CoatsShop.ServiceReference1.Order[] SelectOrdersByOrderDate(string uEmail, string orderDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectOrdersByOrderDate", ReplyAction="http://tempuri.org/IService1/SelectOrdersByOrderDateResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Order[]> SelectOrdersByOrderDateAsync(string uEmail, string orderDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectOneOrder", ReplyAction="http://tempuri.org/IService1/SelectOneOrderResponse")]
        CoatsShop.ServiceReference1.Order SelectOneOrder(string uEmail, string orderDate, int ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectOneOrder", ReplyAction="http://tempuri.org/IService1/SelectOneOrderResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Order> SelectOneOrderAsync(string uEmail, string orderDate, int ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUserByEmail", ReplyAction="http://tempuri.org/IService1/DeleteUserByEmailResponse")]
        int DeleteUserByEmail(string UserEmail, string UserPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUserByEmail", ReplyAction="http://tempuri.org/IService1/DeleteUserByEmailResponse")]
        System.Threading.Tasks.Task<int> DeleteUserByEmailAsync(string UserEmail, string UserPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeletAllUsers", ReplyAction="http://tempuri.org/IService1/SeletAllUsersResponse")]
        CoatsShop.ServiceReference1.User[] SeletAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SeletAllUsers", ReplyAction="http://tempuri.org/IService1/SeletAllUsersResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.User[]> SeletAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectUserIDByEmail", ReplyAction="http://tempuri.org/IService1/SelectUserIDByEmailResponse")]
        string SelectUserIDByEmail(string UserEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectUserIDByEmail", ReplyAction="http://tempuri.org/IService1/SelectUserIDByEmailResponse")]
        System.Threading.Tasks.Task<string> SelectUserIDByEmailAsync(string UserEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckUserExist", ReplyAction="http://tempuri.org/IService1/CheckUserExistResponse")]
        bool CheckUserExist(string uPass, string uEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckUserExist", ReplyAction="http://tempuri.org/IService1/CheckUserExistResponse")]
        System.Threading.Tasks.Task<bool> CheckUserExistAsync(string uPass, string uEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAdminExist", ReplyAction="http://tempuri.org/IService1/CheckAdminExistResponse")]
        bool CheckAdminExist(string uPass, string uEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAdminExist", ReplyAction="http://tempuri.org/IService1/CheckAdminExistResponse")]
        System.Threading.Tasks.Task<bool> CheckAdminExistAsync(string uPass, string uEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUserProfile", ReplyAction="http://tempuri.org/IService1/UpdateUserProfileResponse")]
        int UpdateUserProfile(CoatsShop.ServiceReference1.User usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUserProfile", ReplyAction="http://tempuri.org/IService1/UpdateUserProfileResponse")]
        System.Threading.Tasks.Task<int> UpdateUserProfileAsync(CoatsShop.ServiceReference1.User usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CountUsers", ReplyAction="http://tempuri.org/IService1/CountUsersResponse")]
        int CountUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CountUsers", ReplyAction="http://tempuri.org/IService1/CountUsersResponse")]
        System.Threading.Tasks.Task<int> CountUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllMsg", ReplyAction="http://tempuri.org/IService1/SelectAllMsgResponse")]
        CoatsShop.ServiceReference1.MailBox[] SelectAllMsg();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllMsg", ReplyAction="http://tempuri.org/IService1/SelectAllMsgResponse")]
        System.Threading.Tasks.Task<CoatsShop.ServiceReference1.MailBox[]> SelectAllMsgAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CoatsShop.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CoatsShop.ServiceReference1.IService1>, CoatsShop.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CoatsShop.ServiceReference1.Cities[] SelectAllCities() {
            return base.Channel.SelectAllCities();
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Cities[]> SelectAllCitiesAsync() {
            return base.Channel.SelectAllCitiesAsync();
        }
        
        public CoatsShop.ServiceReference1.Cities SelectCityByName(string cityName) {
            return base.Channel.SelectCityByName(cityName);
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Cities> SelectCityByNameAsync(string cityName) {
            return base.Channel.SelectCityByNameAsync(cityName);
        }
        
        public CoatsShop.ServiceReference1.Cities SelectCityById(int id) {
            return base.Channel.SelectCityById(id);
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Cities> SelectCityByIdAsync(int id) {
            return base.Channel.SelectCityByIdAsync(id);
        }
        
        public CoatsShop.ServiceReference1.Cities[] OrderByName() {
            return base.Channel.OrderByName();
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Cities[]> OrderByNameAsync() {
            return base.Channel.OrderByNameAsync();
        }
        
        public CoatsShop.ServiceReference1.Item[] SelectAllItemList() {
            return base.Channel.SelectAllItemList();
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Item[]> SelectAllItemListAsync() {
            return base.Channel.SelectAllItemListAsync();
        }
        
        public CoatsShop.ServiceReference1.Item[] SelectItemListByCategory(string CategoryName) {
            return base.Channel.SelectItemListByCategory(CategoryName);
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Item[]> SelectItemListByCategoryAsync(string CategoryName) {
            return base.Channel.SelectItemListByCategoryAsync(CategoryName);
        }
        
        public CoatsShop.ServiceReference1.Item SelectItemByName(string ItemName) {
            return base.Channel.SelectItemByName(ItemName);
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Item> SelectItemByNameAsync(string ItemName) {
            return base.Channel.SelectItemByNameAsync(ItemName);
        }
        
        public CoatsShop.ServiceReference1.Item[] SelectItemListByPrice(double Price1, double Price2) {
            return base.Channel.SelectItemListByPrice(Price1, Price2);
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Item[]> SelectItemListByPriceAsync(double Price1, double Price2) {
            return base.Channel.SelectItemListByPriceAsync(Price1, Price2);
        }
        
        public int AddItem(CoatsShop.ServiceReference1.Item item) {
            return base.Channel.AddItem(item);
        }
        
        public System.Threading.Tasks.Task<int> AddItemAsync(CoatsShop.ServiceReference1.Item item) {
            return base.Channel.AddItemAsync(item);
        }
        
        public int UpdateItem(CoatsShop.ServiceReference1.Item item) {
            return base.Channel.UpdateItem(item);
        }
        
        public System.Threading.Tasks.Task<int> UpdateItemAsync(CoatsShop.ServiceReference1.Item item) {
            return base.Channel.UpdateItemAsync(item);
        }
        
        public int DeleteItem(CoatsShop.ServiceReference1.Item item) {
            return base.Channel.DeleteItem(item);
        }
        
        public System.Threading.Tasks.Task<int> DeleteItemAsync(CoatsShop.ServiceReference1.Item item) {
            return base.Channel.DeleteItemAsync(item);
        }
        
        public CoatsShop.ServiceReference1.Order[] SelectAllOrders(string uEmail) {
            return base.Channel.SelectAllOrders(uEmail);
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Order[]> SelectAllOrdersAsync(string uEmail) {
            return base.Channel.SelectAllOrdersAsync(uEmail);
        }
        
        public int AddOrder(CoatsShop.ServiceReference1.Order od) {
            return base.Channel.AddOrder(od);
        }
        
        public System.Threading.Tasks.Task<int> AddOrderAsync(CoatsShop.ServiceReference1.Order od) {
            return base.Channel.AddOrderAsync(od);
        }
        
        public CoatsShop.ServiceReference1.Order[] SelectOrdersByOrderDate(string uEmail, string orderDate) {
            return base.Channel.SelectOrdersByOrderDate(uEmail, orderDate);
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Order[]> SelectOrdersByOrderDateAsync(string uEmail, string orderDate) {
            return base.Channel.SelectOrdersByOrderDateAsync(uEmail, orderDate);
        }
        
        public CoatsShop.ServiceReference1.Order SelectOneOrder(string uEmail, string orderDate, int ItemCode) {
            return base.Channel.SelectOneOrder(uEmail, orderDate, ItemCode);
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.Order> SelectOneOrderAsync(string uEmail, string orderDate, int ItemCode) {
            return base.Channel.SelectOneOrderAsync(uEmail, orderDate, ItemCode);
        }
        
        public int DeleteUserByEmail(string UserEmail, string UserPass) {
            return base.Channel.DeleteUserByEmail(UserEmail, UserPass);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserByEmailAsync(string UserEmail, string UserPass) {
            return base.Channel.DeleteUserByEmailAsync(UserEmail, UserPass);
        }
        
        public CoatsShop.ServiceReference1.User[] SeletAllUsers() {
            return base.Channel.SeletAllUsers();
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.User[]> SeletAllUsersAsync() {
            return base.Channel.SeletAllUsersAsync();
        }
        
        public string SelectUserIDByEmail(string UserEmail) {
            return base.Channel.SelectUserIDByEmail(UserEmail);
        }
        
        public System.Threading.Tasks.Task<string> SelectUserIDByEmailAsync(string UserEmail) {
            return base.Channel.SelectUserIDByEmailAsync(UserEmail);
        }
        
        public bool CheckUserExist(string uPass, string uEmail) {
            return base.Channel.CheckUserExist(uPass, uEmail);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserExistAsync(string uPass, string uEmail) {
            return base.Channel.CheckUserExistAsync(uPass, uEmail);
        }
        
        public bool CheckAdminExist(string uPass, string uEmail) {
            return base.Channel.CheckAdminExist(uPass, uEmail);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAdminExistAsync(string uPass, string uEmail) {
            return base.Channel.CheckAdminExistAsync(uPass, uEmail);
        }
        
        public int UpdateUserProfile(CoatsShop.ServiceReference1.User usr) {
            return base.Channel.UpdateUserProfile(usr);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserProfileAsync(CoatsShop.ServiceReference1.User usr) {
            return base.Channel.UpdateUserProfileAsync(usr);
        }
        
        public int CountUsers() {
            return base.Channel.CountUsers();
        }
        
        public System.Threading.Tasks.Task<int> CountUsersAsync() {
            return base.Channel.CountUsersAsync();
        }
        
        public CoatsShop.ServiceReference1.MailBox[] SelectAllMsg() {
            return base.Channel.SelectAllMsg();
        }
        
        public System.Threading.Tasks.Task<CoatsShop.ServiceReference1.MailBox[]> SelectAllMsgAsync() {
            return base.Channel.SelectAllMsgAsync();
        }
    }
}
